<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:config/app.properties"/>
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="${dataSource.driver}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>
	
	<!-- <bean id="paginationInterceptor" class="cn.onebank.pmts.utility.mybatis.plugins.OraclePaginationInterceptor" /> -->
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory" autowire="byName">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:config/mybatis/*.sqlmap.xml" />
		<!-- <property name="plugins">
			<list>
				<ref bean="paginationInterceptor"/>
			</list>
		</property> -->
	</bean>
	
	<bean id="transationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transationManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="merge*"  propagation="REQUIRED" />
			<tx:method name="clear*"  propagation="REQUIRED" />
			<tx:method name="reset*"  propagation="REQUIRED" />
			<tx:method name="init*"   propagation="REQUIRED" />
			<tx:method name="save*"   propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 在Service层进行事务控制，并打印当前Service数据源-->
	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcutService" expression="execution(* so.nian.backup.bizz.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcutService" order="2"/>
	</aop:config>
	
</beans>